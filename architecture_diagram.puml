
@startuml
skinparam componentStyle rectangle

package "Usuario" {
    actor Usuario
}

package "Frontend (Streamlit)" {
    component "App UI\n(app.py)" as Frontend
}

package "Backend (FastAPI)" {
    component "API REST\n(routes.py)" as API
    component "RAG Service\n(rag_service.py)" as Service
    component "RAG Engine\n(rag_engine.py)" as Engine
}

package "Infraestructura" {
    database "FAISS Index" as Faiss
    component "Knowledge Base\n(knowledge_base.txt)" as KB
    component "Embedder\n(SentenceTransformer)" as Embedder
    component "LLM Generator\n(distilgpt2)" as Generator
}

Usuario --> Frontend : Ingresa pregunta
Frontend --> API : POST /ask
API --> Service : get_rag_response(pregunta)
Service --> Engine : query(pregunta)

Engine --> Faiss : Recuperar contexto
Engine --> Embedder : Embedding pregunta
Engine --> Generator : Generar respuesta (contexto + pregunta)
Engine --> Service : respuesta generada
Service --> API : respuesta
API --> Frontend : JSON {respuesta}
Frontend --> Usuario : Muestra respuesta

KB --> Engine : Carga base inicial
Engine --> Faiss : Inicializa embeddings

@enduml
